# ZenBot Values
config:
  # default selector. only used if omitting [selector] argument from a command.
  selector: gdax.BTC-USD
  # name of default trade strategy
  strategy: trend_ema
  # startup arguments, expressed as an array. Defaults to ['trade', '--paper'] so you'll need to drop '--paper'
  # when you want to perform real trades
  # common values:
  # ['trade']
  # ['trade', '--paper']
  # ['sim']
  args:
    - "trade"
    - "--paper"

  # Optional stop-order triggers
  # sell if price drops below this % of bought price (0 to disable)
  sell_stop_pct: 0
  # buy if price surges above this % of sold price (0 to disable)
  buy_stop_pct: 0
  # enable trailing sell stop when reaching this % profit (0 to disable)
  profit_stop_enable_pct: 0
  # maintain a trailing stop this % below the high-water mark of profit
  profit_stop_pct: 1

  # Order execution rules:
  # avoid trading at a slippage above this pct
  max_slippage_pct: 5
  # buy with this % of currency balance (WARNING : sim won't work properly if you set this value to 100)
  buy_pct: 99
  # sell with this % of asset balance (WARNING : sim won't work properly if you set this value to 100)
  sell_pct: 99
  # ms to adjust non-filled order after
  order_adjust_time: 5000
  # avoid selling at a loss below this pct set to 0 to ensure selling at a higher price...
  max_sell_loss_pct: 99
  # avoid buying at a loss above this pct set to 0 to ensure buying at a lower price...
  max_buy_loss_pct: 99
  # ms to poll order status
  order_poll_time: 5000
  # ms to wait for settlement (after an order cancel)
  wait_for_settlement: 5000
  # % to mark down buy price for orders
  markdown_buy_pct: 0
  # % to mark up sell price for orders
  markup_sell_pct: 0
  # become a market taker (high fees) or a market maker (low fees)
  order_type: maker
  # when supported by the exchange, use post only type orders.
  post_only: true
  # use separated fee currency such as binance's BNB.
  use_fee_asset: false

  # Misc options

  # days for backfill and sim commands
  days: 14
  # defaults to a high number of lookback periods
  keep_lookback_periods: 50000
  # ms to poll new trades at
  poll_trades: 30000
  # amount of currency to start simulations with
  currency_capital: 1000
  # amount of asset to start simulations with
  asset_capital: 0
  # for sim, reverse time at the end of the graph, normalizing buy/hold to 0
  symmetrical: false
  # number of periods to calculate RSI at
  rsi_periods: 14
  # period to record balances for stats
  balance_snapshot_period: 15m
  # avg. amount of slippage to apply to sim trades
  avg_slippage_pct: 0.045
  # time to leave an order open, default to 1 day (this feature is not supported on all exchanges, currently: GDAX)
  cancel_after: day
  # load and use previous trades for stop-order triggers and loss protection (live/paper mode only)
  use_prev_trades: false
  # minimum number of previous trades to load if use_prev_trades is enabled, set to 0 to disable and use trade time instead
  min_prev_trades: 0

  # Exchange API keys

  # GDAX / Coinbase Pro
  gdax:
    key: YOUR-API-KEY
    b64secret: YOUR-API-SECRET
    passphrase: YOUR-API-PASSPHRASE
    apiURI: https://api.pro.coinbase.com
    websocketURI: wss://ws-feed.pro.coinbase.com
    # set to true to trade on the sandbox platform API
    sandbox: false

  # Poloniex
  # please note: poloniex does not support market orders via the API
  poloniex:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET

  # Kraken
  kraken:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET
    # Please read API TOS on https://www.kraken.com/u/settings/api
    tosagree: disagree

  # Binance
  binance:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET

  # Binance US
  binanceus:
    key: YOUR-API-KEY
    secret: YOUR-SECRET

  # Bittrex
  bittrex:
    # make sure to give your API key access to only: "Trade Limit" and "Read Info",
    # please note that this might change in the future.
    # please note that bittrex API is limited, you cannot use backfills or sims (paper/live trading only)
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET

  # Bitfinex
  bitfinex:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET
    # May use 'exchange' or 'margin' wallet balances
    wallet: exchange

  # Bitstamp
  bitstamp:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET
    # A client ID is required on Bitstamp
    client_id: YOUR-CLIENT-ID

  # CEX.IO
  cexio:
    username: YOUR-CLIENT-ID
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET

  # Gemini
  gemini:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET
    # set to false to trade on the live platform API
    sandbox: true

  # hitBTC
  hitbtc:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET

  # therock
  therock:
    key: YOUR-API-KEY
    secret: YOUR-API-SECRET

  # Notifiers
  notifiers:
    # Filter to notifier's messages for getting Commpleted Trades info.
    only_completed_trades: false
    xmpp:
      enabled: false
      jid: trader@domain.com
      password: ""
      host: domain.com
      port: 5222
      to: MeMyselfAndI@domain.com
    pushbullet:
      enabled: false
      key: ""
      deviceID:
    ifttt:
      enabled: false
      makerKey: ""
      eventName: zenbot
    slack:
      enabled: false
      webhook_url: ""
    adamant:
      enabled: false
      nodes:
        - "https://endless.adamant.im"
        - "https://clown.adamant.im"
        - "https://bid.adamant.im"
        - "https://unusual.adamant.im"
        - "https://debate.adamant.im"
        - "http://185.231.245.26:36666"
        - "https://lake.adamant.im"
        - "http://localhost:36666"
      fromPassphrase: ""
      toAddresses: []
    discord:
      enabled: false
      id: ""
      token: ""
      username: Zenbot
      avatar_url: ""
      # color as a decimal
      color: ""
    prowl:
      enabled: false
      key: ""
    textbelt:
      enabled: false
      phone: ""
      key: ""
    pushover:
      enabled: false
      # create application and supply the token here
      token: ""
      # this is your own user's key (not application related)
      user: ""
      # choose a priority to send zenbot messages with
      # see https://pushover.net/api#priority
      priority: 0
    telegram:
      enabled: false
      interactive: false
      bot_token: ""
      # the id of the chat the messages should be send in
      chat_id: ""
  output:
    api:
      enabled: true
      # IPv4 or IPv6 address to listen on
      # uses all available interfaces if omitted
      ip: 0.0.0.0
      port: 17365

replicaCount: 1
image: "deviavir/zenbot:latest"
service:
  type: ClusterIP

persistence:
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: "8Gi"

ingress:
  enabled: false
  annotations: []
  hostname: "zenbot.example.com"
  tls: false

# Dependency Charts
# https://github.com/bitnami/charts/blob/master/bitnami/mongodb/values.yaml
mongodb:
  service:
    type: ClusterIP
  architecture: standalone
  auth:
    rootPassword: "zenbot"
    username: zenbot
    password: zenbot
    database: zenbot

  persistence:
    enabled: true
    # existingClaim: "-"
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    # mountPath: /bitnami/mongodb
