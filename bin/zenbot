#!/usr/bin/env node
var version = require('../package.json').version
ZENBOT_USER_AGENT = 'zenbot/' + version

var launch = require('../utils/launch')

var program = require('commander')
  .option('--silent', 'speak no evil')
  .version(version)

program
  .command('record')
  .description('1. run the recorder')
  .option('--tweet', 'live tweet big buys/sells (requires extra config)')
  .action(function (options) {
    launch('recorder', options)
  })

program
  .command('backfill')
  .description('2. run the backfiller')
  .option('--after <after>', 'trade sequence id to backfill after')
  .action(function (options) {
    launch('backfiller', options)
  })

program
  .command('learn')
  .description('3. run the machine learner')
  .option('--start <time>', 'start time of simulation')
  .action(function (options) {
    launch('learner', options)
  })

var defaults = require('../conf/defaults.json')

program
  .command('sim')
  .description('run the simulator')
  .option('--start <time>', 'start time of simulation')
  .option('--min_vol <float>', 'volume trigger in BTC', Number, defaults.min_vol),
  .option('--trade_amt <float>', 'trade amount float between 0 and 1', Number, defaults.trade_amt),
  .option('--min_trade <btc>', 'minimum trade in BTC', Number, defaults.min_trade),
  .option('--cooldown <int>', 'trigger cooldown integer', Number, defaults.cooldown),
  .option('--crash <float>', 'crash protection float', Number, defaults.crash),
  .option('--sell_for_less', 'willingness to sell for less float', Number, defaults.sell_for_less),
  .option('--buy_for_more', 'willingness to buy for more float', Number, defaults.buy_for_more),
  .option('--vol_reset', 'volume trigger reset in BTC', Number, defaults.vol_reset),
  .option('--sim_query_limit', 'query limit integer', Number, defaults.sim_query_limit),
  .option('--sim_start_balance', 'simulation start balance in currency', Number, defaults.sim_start_balance)
  .action(function (options) {
    launch('simulator', options)
  })

program
  .command('run')
  .description('4. run zenbot on the exchange')
  .option('--trade', 'do actual trades')
  .option('--tweet', 'live tweet buys/sells and hourly reports (requires extra config)')
  .action(function (options) {
    launch('zen', options)
  })

program
  .command('*')
  .action(function (infile) {
    program.outputHelp()
    process.exit(1)
  })

program.parse(process.argv)

if (!program.rawArgs[2]) {
  program.outputHelp()
  process.exit(1)
}
